

Fill in the blank [   ] by selecting an answer from the options below.

One disadvantage of call (pass)-by-[       ] is that if a large data item (for example, 1080 by 1920 double array) is being passed, copying the data can take a considerable amount of execution time and memory space. [5점]

답변 선택 그룹

reference

value

pointer

none of above




Select an answer from the following options below.

Fill in the blank [   ] by selecting an answer from the options below.

The scope, or the variable lifespan of a [       ] variable is within the function that variable is defined. [5점]

답변 선택 그룹

local

global

protected

private


다음 (1)과 (2) 코드에서 각 line2를 []를 쓰지 말고 써 보시오. 단, 원래의 코드와 같은 기능을 해야함.

 

(1)  -> [5점]

int a[10];  //line 1

a[4] = 5;   //line 2

 

(2)  -> [5점]

int a[5][10];  //line 1

a[3][4] = 5;   //line 2



아래 코드를 보고 문제에 답하시오.

 

#include <iostream>

using namespace std;

 

int f(int a, int b){

    return a+b;

}

 

int g (/*fill in here*/, int x, int y){

    return 2 * (*f)(x,y);

}

 

int main(){

    cout << g(f, 2, 3) <<endl;

}

 

(1) 함수 g의 /*fill in here*/에 들어갈 내용은? [6점] 

(2) 화면에 출력되는 값은 무언인가? [4점]






다음 프로그램에서 function create_integer_matrix()는 parameter로 정수 n을 입력받아 
(1) nxn 2차원 array를 만들고, 
(2) [i][j]번째 원소에 i+j값을 넣고, 
(3) 그 array의 pointer를 return하는 함수이다. 
그러므로 아래의 main에서는 다음과 같은 값이 화면에 프린트 된다.

0 1 2

1 2 3

2 3 4

free_integer_matrix()는 생성된 2차원 array의 메모리를 해제하는 함수이다.

create_integer_matrix() 및 destroy_integer_matrix()를 작성하라. [30점] 
([시작코드]를 변경하지 말 것) Function의 declaration, definition 모두 작성할 것. 
작성한 프로그램은 시작코드를 포함한 하나의 <학번_문제>.cpp 파일 형태로 업로드 하시오. 
파일명에 한글이나 특수문자는 사용하지 마시오.

ex) 2021000111_q5.cpp 파일 업로드

Memory leak이나 run-time error가 발생할 시 감점.

 

[시작코드]

#include <iostream>

using namespace std;

int main()
{
    int i,j, **M;
    M = create_integer_matrix(3);
    for(i=0; i<3; i++){
        for(j=0; j<3; j++){
            cout << M[i][j] << " ";
        }
        cout << endl;
    }
    cout << endl;

    destroy_integer_matrix(M, 3);
    return 0;
}

---------------------

#include <iostream>

#include <string>

#include <fstream>

#include <iomanip>

using namespace std;



void get_command() {

}

void get_size() {
    
}

int** gen_matrix() {
}

void swap(int* a, int* b);

void sort_array(int* ary, int size);

void sort_matrix_row() {

}

void print_matrix() {
   
}

void save_matrix() {

}

void free_matrix() {

}



int main() {
    ofstream temp;

    string command;

    int** matrix = NULL;

    int size = 0;

    while (1) {

        get_command(command);

        if (command == "1") {

            get_size(size);

            matrix = gen_matrix(size);

        }

        else if (command == "2") {

            print_matrix(matrix, size);

        }

        else if (command == "3") {

            sort_matrix_row(matrix, size);

        }

        else if (command == "4") {

            save_matrix(matrix, size);

        }

        else if (command == "0") {

            free_matrix(matrix, size);

            cout << "Exit the program.." << endl;

            exit(104);

        }

        else {

            cout << "Wrong command" << endl << endl;

        }

    }



    return 0;

}



void swap(int* a, int* b) {

    int temp = *a;

    *a = *b;

    *b = temp;

}



void sort_array(int* ary, int size) {

    // 보너스 문제를 안 풀시에는 작성하지 않아도 됨

}